[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

# ===================================================================
# MYPY – restrykcyjny tryb "strict" + drobne wyjątki
# ===================================================================
[tool.mypy]
python_version            = "3.11"
strict                    = true          # Włącza pełen zestaw flag "strict"
warn_unused_configs       = true
plugins                   = []

# Ignorujemy braki typów tylko tam, gdzie naprawdę nie da się inaczej
[[tool.mypy.overrides]]
module = [
  "cv2.*",
  "mediapipe.*",
  "numpy.*",
  "matplotlib.*",
  "PIL.*",
]
ignore_missing_imports = true

# ===================================================================
# RUFF – linter + formatter (zamiast Flake8/Black/Isort)
# ===================================================================
[tool.ruff]
target-version   = "py311"
line-length      = 100           # Bardziej rygorystycznie niż domyślne 120 znaków
exclude = [
  ".git",
  ".venv",
  "dist",
  "build",
]

# ---- LINT ----------------------------------------------------------
[tool.ruff.lint]
# Zestaw reguł: wszystkie podstawowe + „pyflakes-like” + „bugbear” + „numpy typing”
select = [
  # core
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "W",  # pycodestyle warnings
  "I",  # isort-style import sortowanie
  "B",  # flake8-bugbear
  "UP", # pyupgrade
  "N",  # pep-8 naming
  "C4", # flake8-comprehensions
  "SIM",# flake8-simplicity
  "PERF", # perflint
  "TRY",# try-ceratops (lepsza obsługa wyjątków)
  "ARG",# flake8-unused-arguments
  "DTZ",# flake8-datetimes
  "TCH",# flake8-type-checking (przenoszenie importów za `if TYPE_CHECKING`)
]

# Wyłączamy tylko pojedyncze zbyt inwazyjne lub dublujące się reguły
ignore = [
  "D",        # Docstringi – pokryje Pylint
  "ANN101",   # Typ `self` w metodach
  "ANN102",   # Typ `cls`
  "B008",     # Użycie zmiennych globalnych w funkcjach (w GUI czasem ok)
  "TRY003",   # Wyświetlanie wiadomości w wyjątkach (can be noisy)
]

# ---- FORMAT --------------------------------------------------------
[tool.ruff.format]
quote-style = "single"
indent-style = "space"

# ===================================================================
# PYLINT – użyte jako „druga linia obrony” (lżejsza niż domyślna)
# ===================================================================
[tool.pylint]
disable = [
  # Duplikaty względem Ruff
  "C0114", "C0115", "C0116",   # Docstring-related
  "C0301",                     # line-too-long – Ruff pilnuje długości
  "R0801",                     # duplicate-code (zbyt hałaśliwe na mały projekt)
  # GUI-przyjazne wyłączenia
  "R0902",   # too-many-instance-attributes
  "R0913",   # too-many-arguments
  "R0914",   # too-many-locals
  "R0915",   # too-many-statements
]
good-names = ["_, fp, df, i, j, k, x, y"]  # drobne nazwy zmiennych OK w krótkich lambdach

[tool.pylint.'MESSAGES CONTROL']
enable = "all"

[tool.pylint.master]
jobs = 0                   # Automatyczna równoległość
load-plugins = [
  "pylint_pytest",         # Lepsza obsługa testów (gdyby powstały)
]

# ===================================================================
# RUFLINT (opcjonalnie) – sortowanie importów przez Ruff
# ===================================================================
[tool.ruff.isort]
combine-as-imports = true
force-single-line = false
known-third-party = ["cv2", "mediapipe", "numpy", "matplotlib", "PIL"]
